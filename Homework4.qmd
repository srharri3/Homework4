# Task 1: Conceptual Questions
1. ../MyData.csv
2. 
3. Git is a version control software and Github is an online hosting service for Git-based projects.
4. A tibble is a special version of a data frame. The printing method for a tibble is different than a data frame. The printing is more useful and doesn't clog output space. From this we get information on the number of observations, the columns, and we only see the first few rows and columns.
5. 
```{r}
iris |>
  as.tibble() |>
  select(starts_with("Petal", Species))
```



```{r}
library("tidyverse")
```

# Task 2 Reading Delimited Data
## Glass Data
Reading data into R from URL and printing out the tibble.
```{r}
glass <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/glass.data", col_names = c("Id","RI","Na","Mg","Al","Si","K","Ca","Ba","Fe","Type_of_glass"))
glass
```
Starting a chain to overwrite Type_of_glass using mutate. Continuing the chain to only keep certain observations.
```{r}
glass |>
  mutate(Type_of_glass = ifelse(
    Type_of_glass == 1, "building_windows_float_processed", 
     ifelse(
    Type_of_glass == 2,"building_windows_non_float_processed",
      ifelse(
    Type_of_glass == 3,"vehicle_windows_float_processed",
      ifelse(
        Type_of_glass == 4, "vehicle_windows_non_float_processed",
      ifelse(
        Type_of_glass == 5,"container",
      ifelse(
        Type_of_glass == 6,"tableware",
      ifelse(
        Type_of_glass == 7,"headlamp",
        as.character(Type_of_glass))))))))) |>
  dplyr::filter(Fe < 0.2, Type_of_glass %in% c("tableware", "headlamp"))
```
## Yeast Data
Reading in Yeast data.
```{r}
yeast <- read_table("https://www4.stat.ncsu.edu/~online/datasets/yeast.data", col_names = c("seq_name","mcg","gvh","alm","mit","erl","pox","vac","nuc","class"))
yeast
```
Removing seq_name and nuc columns. Adding columns corresponding to the mean and median of each numeric variable)
```{r}
yeast |> 
  select(mcg, gvh, alm, mit, erl, pox, vac, class) |>
  mutate(across(c(mcg, gvh, alm, mit, erl, pox, vac), mean, .names = "mean_{.col}")) |>
  mutate(across(c(mcg, gvh, alm, mit, erl, pox, vac), median, .names = "median_{.col}")) |>
  group_by(class)
```
# Task 2: Combining Excel and Delimited Data
