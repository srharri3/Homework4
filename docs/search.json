[
  {
    "objectID": "Homework4.html",
    "href": "Homework4.html",
    "title": "Task 1: Conceptual Questions",
    "section": "",
    "text": "../MyData.csv\nR projects help keep files and analysis separate, while all being in one general location. You can divide work into multiple sections easily, and this allows for easier collaboration.\nGit is a version control software and Github is an online hosting service for Git-based projects.\nA tibble is a special version of a data frame with a printing method that is different than a data frame. The printing is more useful and doesn’t clog output space. From this we get information on the number of observations, the columns, and we only see the first few rows and columns making it easier to look at.\niris_chain |&gt;\nas.tibble(iris) |&gt;\nselect(starts_with(“Petal”, Species). |&gt;\nfilter(Petal.Length &lt; 1.55) |&gt;\narrange(Species)\n\n\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "Homework4.html#glass-data",
    "href": "Homework4.html#glass-data",
    "title": "Task 1: Conceptual Questions",
    "section": "Glass Data",
    "text": "Glass Data\nReading data into R from URL and printing out the tibble.\n\nglass &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\", col_names = c(\"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"Type_of_glass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type_of_glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglass\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\nStarting a chain to overwrite Type_of_glass using mutate. Continuing the chain to only keep certain observations.\n\nglass |&gt;\n  mutate(Type_of_glass = ifelse(\n    Type_of_glass == 1, \"building_windows_float_processed\", \n     ifelse(\n    Type_of_glass == 2,\"building_windows_non_float_processed\",\n      ifelse(\n    Type_of_glass == 3,\"vehicle_windows_float_processed\",\n      ifelse(\n        Type_of_glass == 4, \"vehicle_windows_non_float_processed\",\n      ifelse(\n        Type_of_glass == 5,\"container\",\n      ifelse(\n        Type_of_glass == 6,\"tableware\",\n      ifelse(\n        Type_of_glass == 7,\"headlamp\",\n        as.character(Type_of_glass))))))))) |&gt;\n  dplyr::filter(Fe &lt; 0.2, Type_of_glass %in% c(\"tableware\", \"headlamp\"))\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamp     \n# ℹ 28 more rows"
  },
  {
    "objectID": "Homework4.html#yeast-data",
    "href": "Homework4.html#yeast-data",
    "title": "Task 1: Conceptual Questions",
    "section": "Yeast Data",
    "text": "Yeast Data\nReading in Yeast data.\n\nyeast &lt;- read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\", col_names = c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\nRemoving seq_name and nuc columns. Adding columns corresponding to the mean and median of each numeric variable)\n\nyeast |&gt; \n  select(mcg, gvh, alm, mit, erl, pox, vac, class) |&gt;\n  mutate(across(c(mcg, gvh, alm, mit, erl, pox, vac), mean, .names = \"mean_{.col}\")) |&gt;\n  mutate(across(c(mcg, gvh, alm, mit, erl, pox, vac), median, .names = \"median_{.col}\")) |&gt;\n  group_by(class)\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mean_mcg mean_gvh mean_alm\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.500    0.500    0.500\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.500    0.500    0.500\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.500    0.500    0.500\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.500    0.500    0.500\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.500    0.500    0.500\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.500    0.500    0.500\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.500    0.500    0.500\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.500    0.500    0.500\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.500    0.500    0.500\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.500    0.500    0.500\n# ℹ 1,474 more rows\n# ℹ 11 more variables: mean_mit &lt;dbl&gt;, mean_erl &lt;dbl&gt;, mean_pox &lt;dbl&gt;,\n#   mean_vac &lt;dbl&gt;, median_mcg &lt;dbl&gt;, median_gvh &lt;dbl&gt;, median_alm &lt;dbl&gt;,\n#   median_mit &lt;dbl&gt;, median_erl &lt;dbl&gt;, median_pox &lt;dbl&gt;, median_vac &lt;dbl&gt;"
  }
]